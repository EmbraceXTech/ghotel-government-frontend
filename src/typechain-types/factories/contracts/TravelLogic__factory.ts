/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TravelLogic,
  TravelLogicInterface,
} from "../../contracts/TravelLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPayment",
        name: "_payment",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "action",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "Blacklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "action",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "MerchantList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "action",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "TravelerList",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "blacklistAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "bool_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isMerchant",
    outputs: [
      {
        internalType: "bool",
        name: "bool_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTraveler",
    outputs: [
      {
        internalType: "bool",
        name: "bool_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payment",
    outputs: [
      {
        internalType: "contract IPayment",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "unBlacklistAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "unWhitelistMerchants",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "unWhitelistTravelers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "whitelistMerchants",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "whitelistTravelers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b95380380610b9583398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600480546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b610a82806101136000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806377a54eb81161008c5780638da5cb5b116100665780638da5cb5b146101a3578063b3ac6d6c146101b4578063f2fde38b146101c7578063fe575a87146101da57600080fd5b806377a54eb81461015a5780637c656f361461016d5780638d8bf8a11461019057600080fd5b8063022c990b146100d45780631eb08844146100e95780632a58e9ff146100fc57806342f6487a1461010f57806345be01ee1461013f578063715018a614610152575b600080fd5b6100e76100e236600461083b565b610206565b005b6100e76100f7366004610878565b6102b1565b6100e761010a36600461083b565b61036d565b600454610122906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e761014d366004610878565b61040d565b6100e76104bb565b6100e761016836600461083b565b6104cf565b61018061017b3660046108bf565b61056e565b6040519015158152602001610136565b61018061019e3660046108eb565b6105c0565b6000546001600160a01b0316610122565b6100e76101c236600461083b565b610607565b6100e76101d53660046108eb565b6106a7565b6101806101e83660046108eb565b6001600160a01b031660009081526001602052604090205460ff1690565b61020e6106ea565b60005b81518110156102765760016002600084848151811061023257610232610906565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061026e8161091c565b915050610211565b507f7948a4218895b6c1278988960a7ae45dc280b82df7036ed3f99cbb5c7ee9155f816040516102a69190610987565b60405180910390a150565b6102b96106ea565b60005b815181101561032f5760008381526003602052604081208351600192908590859081106102eb576102eb610906565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806103278161091c565b9150506102bc565b507fcb96cf27e38bf70b89f52b1e2bc4951c66e9010cef12388f72149aa04652986b82826040516103619291906109bc565b60405180910390a15050565b6103756106ea565b60005b81518110156103dd5760006001600084848151811061039957610399610906565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806103d58161091c565b915050610378565b507fec4278f102f926fde0efb7880406549ffb1856232c5dc1b5c798a95dfd4c66d6816040516102a69190610a00565b6104156106ea565b60005b81518110156104895760008381526003602052604081208351829085908590811061044557610445610906565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806104818161091c565b915050610418565b507fcb96cf27e38bf70b89f52b1e2bc4951c66e9010cef12388f72149aa04652986b8282604051610361929190610a26565b6104c36106ea565b6104cd6000610717565b565b6104d76106ea565b60005b815181101561053e5760018060008484815181106104fa576104fa610906565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806105368161091c565b9150506104da565b507fec4278f102f926fde0efb7880406549ffb1856232c5dc1b5c798a95dfd4c66d6816040516102a69190610987565b60008281526003602090815260408083206001600160a01b038516845290915281205460ff1680156105b957506001600160a01b03821660009081526001602052604090205460ff16155b9392505050565b6001600160a01b03811660009081526002602052604081205460ff16801561060157506001600160a01b03821660009081526001602052604090205460ff16155b92915050565b61060f6106ea565b60005b81518110156106775760006002600084848151811061063357610633610906565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061066f8161091c565b915050610612565b507f7948a4218895b6c1278988960a7ae45dc280b82df7036ed3f99cbb5c7ee9155f816040516102a69190610a00565b6106af6106ea565b6001600160a01b0381166106de57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6106e781610717565b50565b6000546001600160a01b031633146104cd5760405163118cdaa760e01b81523360048201526024016106d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461079457600080fd5b919050565b600082601f8301126107aa57600080fd5b8135602067ffffffffffffffff808311156107c7576107c7610767565b8260051b604051601f19603f830116810181811084821117156107ec576107ec610767565b60405293845285810183019383810192508785111561080a57600080fd5b83870191505b84821015610830576108218261077d565b83529183019190830190610810565b979650505050505050565b60006020828403121561084d57600080fd5b813567ffffffffffffffff81111561086457600080fd5b61087084828501610799565b949350505050565b6000806040838503121561088b57600080fd5b82359150602083013567ffffffffffffffff8111156108a957600080fd5b6108b585828601610799565b9150509250929050565b600080604083850312156108d257600080fd5b823591506108e26020840161077d565b90509250929050565b6000602082840312156108fd57600080fd5b6105b98261077d565b634e487b7160e01b600052603260045260246000fd5b60006001820161093c57634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b8381101561097c5781516001600160a01b031687529582019590820190600101610957565b509495945050505050565b6040815260006109aa60408301600381526218591960ea1b602082015260400190565b82810360208401526108708185610943565b6060815260006109df60608301600381526218591960ea1b602082015260400190565b84602084015282810360408401526109f78185610943565b95945050505050565b6040815260006109aa60408301600681526572656d6f766560d01b602082015260400190565b6060815260006109df60608301600681526572656d6f766560d01b60208201526040019056fea26469706673582212208539a6a5af8be38c452ed33cd5c1dc56fdb473793f8962065e856d4a08c120b064736f6c63430008140033";

type TravelLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TravelLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TravelLogic__factory extends ContractFactory {
  constructor(...args: TravelLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _payment: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_payment, overrides || {});
  }
  override deploy(
    _payment: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_payment, overrides || {}) as Promise<
      TravelLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TravelLogic__factory {
    return super.connect(runner) as TravelLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TravelLogicInterface {
    return new Interface(_abi) as TravelLogicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TravelLogic {
    return new Contract(address, _abi, runner) as unknown as TravelLogic;
  }
}
